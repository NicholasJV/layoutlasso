/**
 * gridstack-angular - Angular Gridstack.js directive
 * @version v0.2.0
 * @author Kevin Dietrich
 * @link https://github.com/kdietrich/gridstack-angular#readme
 * @license MIT
 */
!function(){"use strict";angular.module("gridstack-angular",[]);var t=angular.module("gridstack-angular");t.controller("GridstackController",["$scope",function(t){var r=null;this.init=function(t,n){return r=t.gridstack(n).data("gridstack")},this.removeItem=function(t){return r?r.remove_widget(t,!1):null},this.addItem=function(t){return r?(r._prepare_element(t),r._update_container_height(),t):null}}])}();
!function(){"use strict";var n=angular.module("gridstack-angular");n.directive("gridstack",function(){return{restrict:"A",controller:"GridstackController",scope:{onChange:"&",onDragStart:"&",onDragStop:"&",onResizeStart:"&",onResizeStop:"&",options:"="},link:function(n,t,o,e,i){e.init(t,n.options),t.on("change",function(t,o){n.onChange({event:t,items:o})}),t.on("dragstart",function(t,o){n.onDragStart({event:t,ui:o})}),t.on("dragstop",function(t,o){n.onDragStop({event:t,ui:o})}),t.on("resizestart",function(t,o){n.onResizeStart({event:t,ui:o})}),t.on("resizestop",function(t,o){n.onResizeStop({event:t,ui:o})})}}})}();
!function(){"use strict";var t=angular.module("gridstack-angular");t.directive("gridstackItem",function(){return{restrict:"A",controller:"GridstackController",require:"^gridstack",scope:{gridstackItem:"=",onItemAdded:"&"},link:function(t,e,r,d){r.$observe("gridstackItem",function(r){var i=(d.addItem(e),e.data("_gridstack_node"));t.onItemAdded({item:i})}),e.bind("$destroy",function(){d.removeItem(e)})}}})}();